import { Directive, Input, NgZone } from '@angular/core';
import { RiveCanvas } from '../canvas';
import { RiveTransformComponent } from './transform-component';
import * as i0 from "@angular/core";
import * as i1 from "../canvas";
export class RiveBone extends RiveTransformComponent {
    set length(value) {
        this.set('length', value);
    }
    constructor(zone, canvas) {
        super(zone, canvas);
    }
    getComponent(name) {
        return this.canvas.artboard?.bone(name);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: RiveBone, deps: [{ token: i0.NgZone }, { token: i1.RiveCanvas }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.4", type: RiveBone, isStandalone: true, selector: "riv-bone, [rivBone]", inputs: { length: "length" }, exportAs: ["rivBone"], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: RiveBone, decorators: [{
            type: Directive,
            args: [{
                    selector: 'riv-bone, [rivBone]',
                    exportAs: 'rivBone',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.RiveCanvas }]; }, propDecorators: { length: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9uZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctcml2ZS9zcmMvbGliL2NvbXBvbmVudC9ib25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7QUFTL0QsTUFBTSxPQUFPLFFBQVMsU0FBUSxzQkFBNEI7SUFDeEQsSUFBYSxNQUFNLENBQUMsS0FBeUM7UUFDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELFlBQVksSUFBWSxFQUFFLE1BQWtCO1FBQzFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUVELFlBQVksQ0FBQyxJQUFZO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFDLENBQUM7OEdBWFUsUUFBUTtrR0FBUixRQUFROzsyRkFBUixRQUFRO2tCQUxwQixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFFBQVEsRUFBRSxTQUFTO29CQUNuQixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7c0hBRWMsTUFBTTtzQkFBbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSaXZlQ2FudmFzIH0gZnJvbSAnLi4vY2FudmFzJztcclxuaW1wb3J0IHsgUml2ZVRyYW5zZm9ybUNvbXBvbmVudCB9IGZyb20gJy4vdHJhbnNmb3JtLWNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJvbmUgfSBmcm9tICdAcml2ZS1hcHAvY2FudmFzLWFkdmFuY2VkJztcclxuXHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAncml2LWJvbmUsIFtyaXZCb25lXScsXHJcbiAgICBleHBvcnRBczogJ3JpdkJvbmUnLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUml2ZUJvbmUgZXh0ZW5kcyBSaXZlVHJhbnNmb3JtQ29tcG9uZW50PEJvbmU+IHtcclxuICBASW5wdXQoKSBzZXQgbGVuZ3RoKHZhbHVlOiBudW1iZXIgfCBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XHJcbiAgICB0aGlzLnNldCgnbGVuZ3RoJywgdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3Ioem9uZTogTmdab25lLCBjYW52YXM6IFJpdmVDYW52YXMpIHtcclxuICAgIHN1cGVyKHpvbmUsIGNhbnZhcyk7XHJcbiAgfVxyXG5cclxuICBnZXRDb21wb25lbnQobmFtZTogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jYW52YXMuYXJ0Ym9hcmQ/LmJvbmUobmFtZSk7XHJcbiAgfVxyXG5cclxufSJdfQ==