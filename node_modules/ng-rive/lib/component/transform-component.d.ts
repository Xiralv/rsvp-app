import { NgZone } from '@angular/core';
import { RiveCanvas } from '../canvas';
import { TransformComponent } from '@rive-app/canvas-advanced';
import * as i0 from "@angular/core";
export declare abstract class RiveTransformComponent<T extends TransformComponent> {
    private zone;
    protected canvas: RiveCanvas;
    protected component?: T;
    protected state: Partial<T>;
    set name(name: string);
    set scale(value: string | null | undefined);
    set scaleX(value: number | string | null | undefined);
    set scaleY(value: number | string | null | undefined);
    set rotation(value: number | string | null | undefined);
    constructor(zone: NgZone, canvas: RiveCanvas);
    abstract getComponent(name: string): T | undefined;
    protected set(key: keyof T, value: number | string | null | undefined): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RiveTransformComponent<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RiveTransformComponent<any>, never, never, { "name": { "alias": "name"; "required": false; }; "scale": { "alias": "scale"; "required": false; }; "scaleX": { "alias": "scaleX"; "required": false; }; "scaleY": { "alias": "scaleY"; "required": false; }; "rotation": { "alias": "rotation"; "required": false; }; }, {}, never, never, false, never>;
}
