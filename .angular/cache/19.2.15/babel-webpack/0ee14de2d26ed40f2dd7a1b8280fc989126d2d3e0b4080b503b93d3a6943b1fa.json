{"ast":null,"code":"import { gql } from 'apollo-angular';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nexport let GraphqlService = /*#__PURE__*/(() => {\n  var _GraphqlService;\n  class GraphqlService {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    getUsers(name) {\n      return this.apollo.watchQuery({\n        query: gql`\n        query user($name: String!) {\n          user(name: $name) {\n            id\n            attend\n            name\n          }\n        }\n        `,\n        variables: {\n          name: name\n        }\n      }).valueChanges.pipe(map(result => result.data));\n    }\n    save(data) {\n      return this.apollo.mutate({\n        mutation: gql`\n          mutation Mutation($data: UserAnswer!) {\n            save(data: $data)\n          }\n        `,\n        variables: {\n          data: data\n        }\n      });\n    }\n  }\n  _GraphqlService = GraphqlService;\n  _GraphqlService.ɵfac = function GraphqlService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _GraphqlService)(i0.ɵɵinject(i1.Apollo));\n  };\n  _GraphqlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _GraphqlService,\n    factory: _GraphqlService.ɵfac,\n    providedIn: 'root'\n  });\n  return GraphqlService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}