{"ast":null,"code":"import _asyncToGenerator from \"/Users/vlarix/Documents/mobile-apps/rsvp-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { IonModal } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api/api.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"src/app/services/graphql/graphql.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  \"yes\": a0\n});\nconst _c1 = a0 => ({\n  \"no\": a0\n});\nfunction ModalFormComponent_ng_template_2_ion_card_subtitle_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card-subtitle\");\n    i0.ɵɵtext(1, \"You are invited!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModalFormComponent_ng_template_2_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"ion-label\", 12)(2, \"h1\");\n    i0.ɵɵtext(3, \"Attending?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-row\")(5, \"ion-col\")(6, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_ng_template_2_div_16_Template_ion_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.selectButton(\"yes\"));\n    });\n    i0.ɵɵtext(7, \" Yes \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-col\")(9, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_ng_template_2_div_16_Template_ion_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.selectButton(\"no\"));\n    });\n    i0.ɵɵtext(10, \" No \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r1.selectedButton === \"yes\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r1.selectedButton === \"no\"));\n  }\n}\nfunction ModalFormComponent_ng_template_2_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-input\", 14);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ModalFormComponent_ng_template_2_div_17_Template_ion_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.name, $event) || (ctx_r1.name = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.name);\n  }\n}\nfunction ModalFormComponent_ng_template_2_ion_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 15);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_ng_template_2_ion_button_18_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.submit());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModalFormComponent_ng_template_2_ion_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 16);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_ng_template_2_ion_button_19_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.confirm());\n    });\n    i0.ɵɵtext(1, \"Confirm\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModalFormComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 2)(3, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_ng_template_2_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.cancel());\n    });\n    i0.ɵɵtext(4, \"Cancel\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-title\");\n    i0.ɵɵtext(6, \"Welcome\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"ion-content\", 4)(8, \"div\", 5)(9, \"ion-card\")(10, \"ion-card-header\")(11, \"ion-card-title\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, ModalFormComponent_ng_template_2_ion_card_subtitle_13_Template, 2, 0, \"ion-card-subtitle\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ion-card-content\")(15, \"ion-list\", 7);\n    i0.ɵɵtemplate(16, ModalFormComponent_ng_template_2_div_16_Template, 11, 6, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, ModalFormComponent_ng_template_2_div_17_Template, 2, 1, \"div\", 6)(18, ModalFormComponent_ng_template_2_ion_button_18_Template, 2, 0, \"ion-button\", 9)(19, ModalFormComponent_ng_template_2_ion_button_19_Template, 2, 0, \"ion-button\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate(ctx_r1.cardTitle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isUserValid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isUserValid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isUserValid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isUserValid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isUserValid);\n  }\n}\nexport let ModalFormComponent = /*#__PURE__*/(() => {\n  var _ModalFormComponent;\n  class ModalFormComponent {\n    constructor(api, toastController, graphql) {\n      this.api = api;\n      this.toastController = toastController;\n      this.graphql = graphql;\n      this.cardTitle = 'RSVP now';\n      this.isUserValid = false;\n      this.message = 'This modal example uses triggers to automatically open a modal when the button is clicked.';\n      this.userData = {};\n      this.selectedButton = '';\n    }\n    ngOnInit() {\n      // this.presentingElement = document.querySelector('.ion-page');\n    }\n    clearModal() {\n      this.userData = {};\n      this.isUserValid = false;\n      this.name = \"\";\n      this.cardTitle = 'RSVP now';\n      this.selectedButton = '';\n    }\n    selectButton(button) {\n      this.selectedButton = button;\n    }\n    cancel() {\n      this.clearModal();\n      this.modal.dismiss(null, 'cancel');\n      // this.modal.onDidDismiss()\n    }\n    // onWillDismiss(event: CustomEvent<OverlayEventDetail>) {\n    //   if (event.detail.role === 'confirm') {\n    //     this.message = `Hello, ${event.detail.data}!`;\n    //   }\n    // }\n    presentToast(msg) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this.toastController.create({\n          message: msg,\n          duration: 1000,\n          position: 'bottom'\n        });\n        yield toast.present();\n      })();\n    }\n    /**\n     * Submit the answer of the user\n     */\n    confirm() {\n      let userAnswers = {\n        id: this.userData.id,\n        name: this.userData.name,\n        attend: this.selectedButton === 'yes'\n      };\n      console.log(userAnswers);\n      this.graphql.save(userAnswers).subscribe(({\n        data\n      }) => {\n        this.presentToast(data.save);\n        this.modal.dismiss();\n      });\n    }\n    /**\n     * Check if the user is invited in the RSVP\n     */\n    submit() {\n      if (this.name != undefined) {\n        this.graphql.getUsers(this.name).subscribe(data => {\n          this.userData = data.user;\n          let message = this.userData != null ? `You are invited \"${this.userData.name}\"` : 'User not found';\n          this.isUserValid = this.userData != null;\n          this.cardTitle = this.isUserValid ? `\"${this.userData.name}\"` : 'RSVP now';\n          this.presentToast(message);\n        });\n      }\n    }\n  }\n  _ModalFormComponent = ModalFormComponent;\n  _ModalFormComponent.ɵfac = function ModalFormComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _ModalFormComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastController), i0.ɵɵdirectiveInject(i3.GraphqlService));\n  };\n  _ModalFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _ModalFormComponent,\n    selectors: [[\"app-modal-form\"]],\n    viewQuery: function ModalFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(IonModal, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    standalone: false,\n    decls: 3,\n    vars: 1,\n    consts: [[\"modal\", \"\"], [\"trigger\", \"open-modal\", 3, \"presentingElement\"], [\"slot\", \"start\"], [3, \"click\"], [1, \"ion-no-padding\"], [1, \"center-content\"], [4, \"ngIf\"], [\"lines\", \"none\"], [\"class\", \"ion-padding\", 4, \"ngIf\"], [\"class\", \"ion-padding\", \"expand\", \"block\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ion-padding\", \"expand\", \"block\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"ion-padding\"], [\"position\", \"stacked\", \"color\", \"medium\"], [1, \"default-color\", 3, \"click\", \"ngClass\"], [\"color\", \"primary\", \"mode\", \"md\", \"label\", \"Name\", \"label-placement\", \"floating\", \"fill\", \"outline\", \"placeholder\", \"Enter your name\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"block\", 1, \"ion-padding\", 3, \"click\"], [\"expand\", \"block\", 1, \"ion-padding\", 3, \"click\", \"disabled\"]],\n    template: function ModalFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-modal\", 1, 0);\n        i0.ɵɵtemplate(2, ModalFormComponent_ng_template_2_Template, 20, 6, \"ng-template\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"presentingElement\", ctx.presentingElement);\n      }\n    },\n    dependencies: [i2.IonButton, i2.IonButtons, i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardSubtitle, i2.IonCardTitle, i2.IonCol, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonLabel, i2.IonList, i2.IonRow, i2.IonTitle, i2.IonToolbar, i2.IonModal, i2.TextValueAccessor, i4.NgClass, i4.NgIf, i5.NgControlStatus, i5.NgModel],\n    styles: [\".center-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:100%;position:absolute;top:20%;left:0}.box[_ngcontent-%COMP%]{border-color:#403e39;border-width:thin;border-style:solid;border-radius:3px}.center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:absolute}.default-color[_ngcontent-%COMP%]{--background: #f6f8fc;color:#000;width:100%}.yes[_ngcontent-%COMP%]{--background: #93e9be;color:#fff}.no[_ngcontent-%COMP%]{--background: #c5000f;color:#fff}.card[_ngcontent-%COMP%]{margin-top:3%;margin-right:3%;margin-left:3%}ion-card[_ngcontent-%COMP%]{width:90%;max-width:400px;box-shadow:0 4px 8px #0003}ion-input[_ngcontent-%COMP%]{--highlight-color-valid: #4d4d4d }\"]\n  });\n  return ModalFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}